

implicit none
Integer::n=5000 
Integer row,col,step
Real(8),Allocatable :: a(:,:),b(:),x(:),c(:)
Real(8) d
Real start, end
print *, "Enter size of the Matrix : "
read *, n
Allocate(a(1:n,1:n+1),b(1:n),x(1:n),c(1:n))
! fill up Matrix 

call RANDOM_NUMBER(a)
call RANDOM_NUMBER(b)


call cpu_time(start)
do step=1,n-1,1
do row=step+1,n,1
if(a(step,step) /= 0) then
a(n,row)=a(n,row)-a(row,step)/a(step,step)*a(n,step)
else
goto 1 ! terminate program 
endif
d=a(row,step)
do col=1,n,1
a(row,col)=a(row,col)-a(step,col)*(d/a(step,step))
enddo
enddo
enddo
do row=n,1,-1
do col=1,n,1
if(col /= row ) then
c(row)=c(row)+a(row,col)*x(col)
else
cycle
endif
enddo
x(row)=(a(n,row)-c(row))/a(row,row)
enddo
call cpu_time(end)
print *,'Time taken:',end-start

1 stop
end